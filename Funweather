#!/usr/bin/env python3
# -*- coding: utf-8 -*-
'''
Created on Thu Dec  5 19:49:52 2019

India Wesley
Gloria Sladek
Andrew Smith
Anna Baron
Nick Pelka

003
12/05/19

'''
print (__doc__)

#importing modules
import pandas as pd
import tkinter as tk 
import requests
import random as rd



#Window dimensions
HEIGHT = 700
WIDTH = 1000

#Defining variables
jokeType = "none"
root_color = '#c5e6e8'
frame_color ='#8fd8e8'



# API key: 0eb79d7da8b67e9c12a8515317c40f70

#takes in the weather json and puts it into a certain format
def format_response(weather):
    """Function name format_response, accepts 1 argument, displays weather info or the except string to label using the json file from the API"""
    try:
        name = weather['name']
        desc = weather['weather'][0]['description']
        temp = weather['main']['temp']
        final_str = 'City: %s \nConditions: %s \nTemperature(°F): %s ' % (name, desc, temp) 
    except:
        final_str = 'There was a problem \n getting that information'
        
    return final_str




#Weather call function
def get_weather(city):
    """Function name get_weather, accepts 1 argument, runs the location info to the weather api using a given key and url"""
    weather_key = '0eb79d7da8b67e9c12a8515317c40f70'
    url = 'https://api.openweathermap.org/data/2.5/weather'
    #Defining a dictionary
    params = {'APPID': weather_key, 'q': city, 'units': 'imperial'}
    response = requests.get(url, params=params)
    weather = response.json()
    label['text'] = format_response(weather)
 
    
    
    
#Functions that print the answer to the joke category that calls it            
def answerLabel():
    """Function name answerLabel, accepts 0 arguments, prints answer from list 1 to Label 3 """
    answer_Weather = answerList1
    label3['text'] = answer_Weather[0]
    
def answerLabel2():
    """Function name answerLabel2, accepts 0 arguments, prints answer from list 2 to Label 3 """
    answer_VG = answerList2
    label3['text'] = answer_VG[0]
    
def answerLabel3():
    """Function name answerLabel3, accepts 0 arguments, prints answer from list 3 to Label 3 """
    answer_COM = answerList3
    label3['text'] = answer_COM[0]
  
    
    
    
#Function that takes one arguement 
def getJoke(jokeType):
    """Function name getJoke, accepts 1 argument, prints joke to Label 2 and calls the answer function that matches the type of jokes."""
    
    if jokeType == "weather" or jokeType == "Weather":
        joke_Weather = jokeList1
        fixed_seed = rd.random()
        rd.Random(fixed_seed).shuffle(jokeList1)
        rd.Random(fixed_seed).shuffle(answerList1)
        label2['text'] = joke_Weather[0]
        root.after(4000, answerLabel)
        
    elif jokeType == "video games" or jokeType == "Video games" or jokeType == "video game" or jokeType == "videogame":
        joke_VG = jokeList2
        fixed_seed2 = rd.random()
        rd.Random(fixed_seed2).shuffle(jokeList2)
        rd.Random(fixed_seed2).shuffle(answerList2)
        label2['text'] = joke_VG[0]
        root.after(4000, answerLabel2)
        
    elif jokeType == "computers" or jokeType == "Computers" or jokeType == "computer" or jokeType == "Computer":
        joke_COM = jokeList3
        fixed_seed3 = rd.random()
        rd.Random(fixed_seed3).shuffle(jokeList3)
        rd.Random(fixed_seed3).shuffle(answerList3)
        label2['text'] = joke_COM[0]
        root.after(4000, answerLabel3)
        
    else:
        label2['text'] = "issue getting jokes"




#root window for placing everything
rootmain = tk.Tk()

#Changing title bar in TK window from TK to "The Fun Weather App"
rootmain.title("The Fun Weather App")

#Bigger window to work with/ Main screen size
canvas = tk.Canvas(rootmain, height=HEIGHT, width=WIDTH)
canvas.pack()



#Main frame for the whole app
root = tk.Frame(rootmain, bg = root_color)
root.place(relheight = 1, relwidth = 1)

#Smaller frame than the main frame that holds the app's parts
frame = tk.Frame(root, bg=frame_color, bd=4)
frame.place(relx=0.5, rely=0.10, relwidth=.90, relheight=0.85, anchor='n')

#Frame to hold jokes and answers
jframe = tk.Frame(frame, bg = frame_color)
jframe.place(relx = .01, rely = .80, relheight = .20, relwidth = .95)



#Entry box to get weather
entry = tk.Entry(frame, font=40, bg = "white")
entry.place(relx=0.02, rely=0.17, relwidth=0.3, relheight=0.08)

#Entry box to get a joke
entry2 = tk.Entry(frame, font=40, bg = "white")
entry2.place(relx=0.02, rely=0.72, relwidth=0.3, relheight=0.08)



#Binding enter key to the relative entry boxes
entry.bind("<Return>",lambda e: get_weather(entry.get()))
entry2.bind("<Return>",lambda e: getJoke(entry2.get()))



#Button to get the weather
button = tk.Button(frame, text="Get The Weather", font=70, command=lambda: get_weather(entry.get()))
button.place(relx=0.35, rely=0.17, relheight=0.08, relwidth=0.3)

#Button to get a joke
button2 = tk.Button(frame, text="Get A Joke", font=70, command=lambda: getJoke(entry2.get()))
button2.place(relx=0.35, rely=0.72, relheight=0.08, relwidth=0.3)



#Popular cities
popcity = tk.Label(frame,bg=frame_color, text='Popular Cities', font=70)
popcity.config(font = ("Comic Sans MS",15, "bold", "italic"))
popcity.place(relx=0.7,rely=0.1,relwidth=.25,relheight=.08)

city1=tk.Button(frame,text='Cleveland,OH',font=70,command= lambda: get_weather('cleveland'))
city1.place(relx=0.7,rely=0.2,relwidth=.25,relheight=.08)

city2=tk.Button(frame,text='London,UK', font=70,command=lambda: get_weather('London,UK'))
city2.place(relx=0.7,rely=0.3,relwidth=.25,relheight=.08)

city3=tk.Button(frame,text='Paris France', font=70,command=lambda: get_weather('Paris, France'))
city3.place(relx=0.7,rely=0.4,relwidth=.25,relheight=.08)

city4=tk.Button(frame,text='New York', font=70,command=lambda: get_weather('New York'))
city4.place(relx=0.7,rely=0.5,relwidth=.25,relheight=.08)

city5=tk.Button(frame,text='San Francisco', font=70,command=lambda: get_weather('San Francisco'))
city5.place(relx=0.7,rely=0.6,relwidth=.25,relheight=.08)



#App Title
title = tk.Label(root,bg = root_color, text = "FUN WEATHER", relief = 'solid')
title.config(font = ("Comic Sans MS", 30, "bold"))
title.place(relwidth = .5, relheight = .1, rely = .00, relx = .5, anchor= 'n')



#Instructions
Inst = tk.Label(frame, bg=frame_color, text = "Type in any city and hit the 'Enter' key  \n or select from our list of popular cities!")
Inst.config(font = ("Comic Sans MS", 18))
Inst.place(relwidth = .67, relheight = .15, rely = .02 )

#Joke instructions 
Inst2 = tk.Label(frame, bg=frame_color, text = "Choose a catagory and hit the 'Enter' key  \n Catagories: weather, computers, video games")
Inst2.config(font = ("Comic Sans MS", 16))
Inst2.place(relwidth = .66, relheight = .15, rely = .57, relx = .027 )   
 

         
#Label to show weather
label = tk.Label(frame,bg='white')
label.config(font=("Sans",20))
label.place( relx=0.02, rely=0.27,relwidth=0.65, relheight=.3)

#Label to show joke
label2 = tk.Label(jframe,bg='white')
label2.config(font = ("Sans",14))
label2.place(relwidth = .95, relheight = .42, rely= 0.1)

#Label that shows answer
label3 = tk.Label(jframe, bg='white')
label3.config(font = ("Sans",14))
label3.place(relwidth = .95, relheight = .42, rely= 0.56)



#Reading in data from the CSV file titled “jokesList1.csv”
jokes1 = pd.read_csv("jokeList1.csv")

#Assigning jokes1 and answers1 CSV files to lists
jokeList1 = jokes1['jokes1'].tolist()
answerList1 = jokes1['answers1'].tolist()

#Reading in data from the CSV file titled “jokesList2.csv”
jokes2 = pd.read_csv("jokeList2.csv")

#Assigning joke2 and answer2 CSV files to lists
jokeList2 = jokes2['jokes2'].tolist()
answerList2 = jokes2['answers2'].tolist()

#Reading in data from the CSV file titled “jokesList3.csv”
jokes3 = pd.read_csv("jokeList3.csv")

#Assigning joke3 and answer3 CSV files to lists
jokeList3 = jokes3['jokes3'].tolist()
answerList3 = jokes3['answers3'].tolist()

rootmain.mainloop() #to run app
